<?php

	// globals
	date_default_timezone_set('America/Los_Angeles');

	// imports
	include 'assets/php/my/common.php';

	// connect to database
	require('assets/php/my/mysql_db.php');
	$mysql_host = 'localhost';
	$mysql_database = 'sundaysc_trigger';
	$mysql_user = 'sundaysc_php';
	$mysql_password = 'Bismillah&';
	$DB = new mysql_db();
	$connectid = $DB->sql_connect($mysql_host, $mysql_user, $mysql_password, $mysql_database);

	http_response_code(200);
	header('Content-Type: application/json');
	$ojson = array();

	// $mac_hash = $_SERVER['REMOTE_ADDR'];
	$mac_hash = $_GET['mh'];
	if (is_null($mac_hash)) {
		$ojson['error'] = '`mh` not provided';
		print json_encode($ojson); exit();
	}

	$buy_qty = $_GET['qty'];
	if (is_null($buy_qty)) {
		$ojson['error'] = '`qty` not provided';
		print json_encode($ojson); exit();
	}
    if (!in_array($buy_qty, array("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))) {
        $ojson['error'] = 'Invalid `qty`. Must be number between 1 - 12.';
		print json_encode($ojson); exit();
    }
	$pplocale = $_GET['locale'];
	if (is_null($pplocale)) {
		$ojson['error'] = '`locale` not provided';
		print json_encode($ojson); exit();
	}

	// $client_id = 'AZSQ8OT9R53iOtZ6QPHg0dlYmHHTv-JJXko97xQh-0M3G9fV8N51HnFmxk60ZcsNIUjn7jlT8uvn8JeH';
    // $client_secret = 'EBto6oyZdYFCjQ7HC6I5yyv3tjEqzmFgk2beUnzV1Uk1O6bWdvICPKEqIjrxUVydx7M3xe1kzF089EXO';
	$client_id = 'ATwtT_OGWRDQdQaI6RHptsEwpl8h7OCc0AOll-_fbgy3Y50Gkl-nbThb3zxnu2_fpzmSq7vhPDH4bFPc';
	$client_secret = 'EC1KVmx8XmaRpWBFc86_mit4cDd0JoX8Z6Ou0GMRH8tHuK188tVA4Lz0lFBZiKbJr0YjAUp8T059w6s_';

	$confirm_id = mt_rand() . '' . time();

	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, "https://api.paypal.com/v1/oauth2/token");
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=client_credentials");
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_USERPWD, $client_id . ":" . $client_secret);

	$headers = array();
	$headers[] = "Accept: application/json";
	$headers[] = "Accept-Language: en_US";
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	$result = curl_exec($ch);
	if (curl_errno($ch)) {
	    echo 'Error:' . curl_error($ch);
	}
	$httpstatus = curl_getinfo($ch, CURLINFO_HTTP_CODE);
	curl_close ($ch);

	// print '$httpstatus: ' . $httpstatus;
	// print($result);
	/*
	{
	    "scope": "https://api.paypal.com/v1/payments/.* https://api.paypal.com/v1/vault/credit-card https://uri.paypal.com/services/applications/webhooks openid https://api.paypal.com/v1/vault/credit-card/.*",
	    "nonce": "2016-12-03T09:17:40ZTGt54MGUmfm1ytN3MSqr5lUN6cJL4pl2aow02BT8YsA",
	    "access_token": "A101.zn6Od1pDXxUOmSGtKgB90b3Khws58eZDot4y-O71juCYqsvP7eDUTQFzrleAmN-U.w8Hr7lNFH5nSTyT4-CMORfeKU-C",
	    "token_type": "Bearer",
	    "app_id": "APP-80W284485P519543T",
	    "expires_in": 32398
	}
	*/

	if ($httpstatus == 200) {
		$authjson = json_decode($result, true);
	} else {
		$ojson['error'] = 'Got bad status code when trying to request paypal: ' . $httpstatus;
		print json_encode($ojson); exit();
	}

    ///////// create experience profile
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	$postfields = array(
    	"name" => "Trigger Experience Profile " . time() . "" . mt_rand(),
        "temporary" => true,
        "presentation" => array(
            "brand_name" => "Trigger Paypal",
            "logo_image" => "https://static.e-junkie.com/sslpic/170486.d4ead6d5a858d6228b34afb3302e9c90.jpg",
            "locale_code" => $pplocale
            // AU, AT, BE, BR, CA, CH, CN, DE, ES, GB, FR, IT, NL, PL, PT, RU, or US
            // da_DK, he_IL, id_ID, ja_JP, no_NO, pt_BR, ru_RU, sv_SE, th_TH, zh_CN, zh_HK, or zh_TW
        ),
        "input_fields" => array(
            "allow_note" => true,
            "no_shipping" => 1
            // "address_override" => 1
        )
	);
	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, "https://api.paypal.com/v1/payment-experience/web-profiles");
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postfields));
	curl_setopt($ch, CURLOPT_POST, 1);

	$headers = array();
	$headers[] = "Content-Type: application/json";
	$headers[] = "Authorization: Bearer " . $authjson['access_token'];
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	$result = curl_exec($ch);
	if (curl_errno($ch)) {
	    echo 'Error:' . curl_error($ch);
	}
	$httpstatus = curl_getinfo($ch, CURLINFO_HTTP_CODE);
	curl_close ($ch);

	// print '$httpstatus: ' . $httpstatus;
	// print($result);
	/*
  {
    "id": "TXP-2G894800057607116",
    "name": "Trigger Experience Profile 1481591000",
    "temporary": true,
    "input_fields": {
      "allow_note": true,
      "no_shipping": 1
    },
    "presentation": {
      "brand_name": "Trigger Payapl",
      "logo_image": "https://static.e-junkie.com/sslpic/170486.d4ead6d5a858d6228b34afb3302e9c90.jpg",
      "locale_code": "US"
    }
  }
	*/

    if ($httpstatus == 201) {
		$experience_json = json_decode($result, true);
	} else {
		$ojson['error'] = 'Got bad status code when trying to request paypal experience: ' . $httpstatus;
		print json_encode($ojson); exit();
	}


	/////////
	// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
	$postfields = array(
		"intent" => "sale",
		"experience_profile_id" => $experience_json["id"],
		"redirect_urls" => array(
			"return_url" => "https://trigger-community.sundayschoolonline.org/paypal2.php?confirm_id=" . $confirm_id,
		    // "cancel_url" => "https://trigger-community.sundayschoolonline.org/paypal2.php?act=cancel"
		    "cancel_url" => "http://127.0.0.1/trigger-app?page=purchase&error=user_cancel"
		),
		"payer" => array(
			"payment_method" => "paypal"
		),
		"transactions" => array(
			0 => array(
				"amount" => array(
					"total" => $buy_qty . ".00",
					"currency" => "USD",
					"details" => array(
						"subtotal" => $buy_qty . ".00",
                        // "shipping" => "1.00",
                        // "tax" => "2.00",
                        // "shipping_discount" => "-1.00"
					)
				),
				"item_list" => array(
					"items" => array(
						0 => array(
							"quantity" => $buy_qty,
                            "name" => "Enabled Hotkey",
                            "price" => "1",
                            "currency" => "USD",
                            "description" => "Allow enabling of another global hotkey"
                            // "tax" => "0"
						)
					)
				),
				"description" => "Purchasing more enabled hotkeys for the Trigger browser extension."
                // "invoice_number" => "merchant invoice",
                // "custom" => "merchant custom data"
			)
		)
	);
	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, "https://api.paypal.com/v1/payments/payment");
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postfields));
	curl_setopt($ch, CURLOPT_POST, 1);

	$headers = array();
	$headers[] = "Content-Type: application/json";
	$headers[] = "Authorization: Bearer " . $authjson['access_token'];
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

	$result = curl_exec($ch);
	if (curl_errno($ch)) {
	    echo 'Error:' . curl_error($ch);
	}
	$httpstatus = curl_getinfo($ch, CURLINFO_HTTP_CODE);
	curl_close ($ch);

	// print '$httpstatus: ' . $httpstatus;
	// print($result);
	/*
	{
	    "id": "PAY-3YW76703PV973952JLBBJDNI",
	    "intent": "sale",
	    "state": "created",
	    "payer": {
	        "payment_method": "paypal",
	        "use_vendor_currency_conversion": false
	    },
	    "transactions": [{
	        "amount": {
	            "total": "4.00",
	            "currency": "USD",
	            "details": {
	                "subtotal": "2.00",
	                "tax": "2.00",
	                "shipping": "1.00",
	                "shipping_discount": "-1.00"
	            }
	        },
	        "description": "The payment transaction description.",
	        "custom": "merchant custom data",
	        "invoice_number": "merchant invoice",
	        "item_list": {
	            "items": [{
	                "name": "item 1",
	                "description": "item 1 description",
	                "price": "1.00",
	                "currency": "USD",
	                "tax": "1.00",
	                "quantity": 1
	            }, {
	                "name": "item 2",
	                "description": "item 2 description",
	                "price": "1.00",
	                "currency": "USD",
	                "tax": "1.00",
	                "quantity": 1
	            }]
	        },
	        "related_resources": []
	    }],
	    "create_time": "2016-12-03T09:34:45Z",
	    "links": [{
	        "href": "https://api.sandbox.paypal.com/v1/payments/payment/PAY-3YW76703PV973952JLBBJDNI",
	        "rel": "self",
	        "method": "GET"
	    }, {
	        "href": "https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token=EC-2Y710738WY857900X",
	        "rel": "approval_url",
	        "method": "REDIRECT"
	    }, {
	        "href": "https://api.sandbox.paypal.com/v1/payments/payment/PAY-3YW76703PV973952JLBBJDNI/execute",
	        "rel": "execute",
	        "method": "POST"
	    }]
	}
	*/

	if ($httpstatus == 201) {
		$initpayjson = json_decode($result, true);
        $execute_url = $initpayjson['links'][2]['href'];
		$query1 = $DB->query('INSERT INTO paypal (confirm_id, access_token, mac_hash, buy_qty, time, execute_url) VALUES ("'. $confirm_id .'", "'. $authjson['access_token'] .'", "'. $mac_hash .'", '. $buy_qty .', "'. date("Y-m-d H:i:s") .'", "'. $execute_url .'")');
		if (isQueryOk($query1)) {
			// $id = $DB->get_inserted_id();
			$ojson['ok'] = true;
			$ojson['approval_url'] = $initpayjson['links'][1]['href'];
		} else {
			$ojson['error'] = 'Something went wrong when trying to insert paypal process';
			$ojson['mysql_error'] = mysql_error();
		}

		print json_encode($ojson); exit();
	} else {
		$ojson['error'] = 'Got bad status code when trying to init paypal process: ' . $httpstatus;
		print json_encode($ojson); exit();
	}



?>
